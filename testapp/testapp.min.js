(function(){window.testAppSetup=function(){return window.LE=new LurchEditor(document.getElementById("editor")),window.testHistory=[{code:"",state:LE.getElement().toJSON()}],"source history historyBody historyTab\ncodeInput testNameInput\nrunButton yesButton noButton downloadButton".split(" ").map(function(t){return window[t]=document.getElementById(t)}),window.maindiv=LE.getElement(),$(runButton).on("click",runButtonClicked),$(yesButton).on("click",yesButtonClicked),$(noButton).on("click",noButtonClicked),$(downloadButton).on("click",downloadButtonClicked),$(codeInput).on("keyup",function(t){return 13===t.keyCode?runButtonClicked():void 0}),$(sourceTab).on("click",updateSourceTab),$(historyTab).on("click",updateHistoryTab),updateSourceTab(),codeInput.focus()},window.updateDispatcher=function(){return $(source).hasClass("active")&&updateSourceTab(),$(history).hasClass("active")?updateHistoryTab():void 0},window.updateSourceTab=function(){var t;return t=LE.getElement().outerHTML.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/'/g,"&apos;").replace(/"/g,"&quot;"),source.innerHTML="<pre>"+t+"</pre>"},window.runButtonClicked=function(event){return eval(codeInput.value),testHistory.push({code:codeInput.value,state:LE.getElement().toJSON()}),updateDispatcher(),codeInput.value="",codeInput.focus()},window.yesButtonClicked=function(){return testHistory[testHistory.length-1].correct=!0,updateDispatcher()},window.noButtonClicked=function(){return testHistory[testHistory.length-1].correct=!1,updateDispatcher()},window.downloadButtonClicked=function(){var t,e,n;return e=JSON.stringify(testHistory),t=new Blob([e],{type:"application/json"}),n=document.createElement("a"),n.setAttribute("href",URL.createObjectURL(t)),n.setAttribute("download",""+(testNameInput.value||"test-history")+".json"),n.click()},window.updateHistoryTab=function(){var t,e,n,o,a,r,c,i,u,s;for(o="",n=u=0,s=testHistory.length;s>u;n=++u)r=testHistory[n],n>0&&(t=r.code.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/'/g,"&apos;").replace(/"/g,"&quot;"),o+="<div class='panel panel-info'>\n  <div class='panel-heading'>\n    <h3 class='panel-title'\n    >Command "+n+":</h3>\n  </div>\n  <div class='panel-body'>\n    <pre>"+t+"</pre>\n  </div>\n</div>"),i=r.hasOwnProperty("correct")?r.correct?"success":"danger":"default",t=Node.fromJSON(r.state).outerHTML,e=t.replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/'/g,"&apos;").replace(/"/g,"&quot;"),t=t.replace(/\s+id=['"][^'"]+['"]/g,""),a="<pre class='gap-below-2'>"+e+"</pre>\n"+t,c=0===n?"Initial state:":"State after command "+n+":",0===n&&(i+=" gap-before-2"),o+="<div class='panel panel-"+i+"'>\n  <div class='panel-heading'>\n    <h3 class='panel-title'>"+c+"</h3>\n  </div>\n  <div class='panel-body'>"+a+"</div>\n</div>";return historyBody.innerHTML=o}}).call(this);
//# sourceMappingURL=testapp.min.js.map