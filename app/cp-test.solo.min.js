(function(){var t,e,n,o,i,a,l,s,r,u,c,d,p,f,h,m,b,g,_,y,w,x,O,k,T,A,M,S,N,q,R=[].slice,I=[].indexOf||function(t){for(var e=0,n=this.length;n>e;e++)if(e in this&&this[e]===t)return e;return-1};p={name:"Example",elements:[{type:"definition"}]},(t=function(){return p.insert=function(t,e){return p.elements=R.call(p.elements.slice(0,t)).concat([e],R.call(p.elements.slice(t))),T(),$("html,body").scrollTop($(o(t)).offset().top),$(o(t)).fadeOut(0).fadeIn(500)},p.remove=function(t){return p.elements=R.call(p.elements.slice(0,t)).concat(R.call(p.elements.slice(t+1))),0===p.elements.length&&(p.elements=[{type:"definition"}]),T(),$("html,body").scrollTop($(o(t)).offset().top)},p.swap=function(t){return 0>t||t>=p.elements.length-1?alert("That cannot be moved any further in that direction."):(p.elements=R.call(p.elements.slice(0,t)).concat([p.elements[t+1]],[p.elements[t]],R.call(p.elements.slice(t+2))),T(),$("html,body").scrollTop($(o(t)).offset().top),$(o(t)).fadeOut(0).fadeIn(500),$(o(t+1)).fadeOut(0).fadeIn(500))}})(),i=function(){return p},x=function(e){return p=e,t(),T()},_=function(t){var e,n;return e=JSON.parse(null!=(n=window.localStorage.languageData)?n:"{}"),e[t]=i(),window.localStorage.languageData=JSON.stringify(e)},y=function(){var t,e;return t=JSON.parse(null!=(e=window.localStorage.languageData)?e:"{}"),Object.keys(t).sort()},s=function(t){var e,n;return e=JSON.parse(null!=(n=window.localStorage.languageData)?n:"{}"),x(e[t])},g=function(t){var e,n;return e=JSON.parse(null!=(n=window.localStorage.languageData)?n:"{}"),delete e[t],window.localStorage.languageData=JSON.stringify(e)},f=null,h=function(){return(new Date).getTime()},A=function(){return f=h()},n=function(){return"(took "+(h()-f)+" ms)"},r=function(){return $("#main").get(0)},m=function(){return r().childNodes.length},o=function(t){return r().childNodes[t]},e=function(t){return r().appendChild(t)},S=function(t){return r().removeChild(o(t))},l=function(t,n){return t===m()?e(n):r().insertBefore(n,o(t))},M=function(t,e){return l(Math.min(t,e),S(Math.max(t,e)))},w=function(t,n){return t===m()?e(n):(r().insertAfter(n,o(t)),S(t))},u=function(t,e){var n;return null==e&&(e=null),n=document.createElement("div"),n.innerHTML=t,null!=e&&n.setAttribute("class",e),n},c=function(t){return u("<div class='panel-heading'> <div class='row'> <div class='col-md-6'><h5>New form in the language</h5></div> <div class='col-md-6' style='text-align: right;'> Move <button type='button' id='move_up_button_"+t+"' data-toggle='tooltip' title='Move this form up' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-up' aria-hidden='true'></span></button> <button type='button' id='move_down_button_"+t+"' data-toggle='tooltip' title='Move this form down' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-down' aria-hidden='true'></span></button> Test <button type='button' id='test_above_button_"+t+"' data-toggle='tooltip' title='Add test above' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-up' aria-hidden='true'></span></button> <button type='button' id='test_below_button_"+t+"' data-toggle='tooltip' title='Add test below' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-down' aria-hidden='true'></span></button> Form <button type='button' id='form_above_button_"+t+"' data-toggle='tooltip' title='Add form above' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-up' aria-hidden='true'></span></button> <button type='button' id='form_below_button_"+t+"' data-toggle='tooltip' title='Add form below' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-down' aria-hidden='true'></span></button> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <button type='button' id='duplicate_form_button_"+t+"' data-toggle='tooltip' title='Duplicate this form' class='btn btn-md btn-default'><span class='glyphicon glyphicon-plus' aria-hidden='true'></span></button> <button type='button' id='delete_form_button_"+t+"' data-toggle='tooltip' title='Delete this form' class='btn btn-md btn-default'><span class='glyphicon glyphicon-remove' aria-hidden='true'></span></button> </div></div> </div> <div class='panel-body container'> <div class='row form-group'> <div class='col-md-3' style='text-align: right;'> We define a(n) </div> <div class='col-md-8'> <input type='text' class='form-control' id='input_name"+t+"' placeholder='examples: integer, sum, fraction, variable, factorial, ...'> </div> <div class='col-md-1'> <a href='#' onclick='javascript:showHelp("+t+",\"name\");'> <span class='glyphicon glyphicon-question-sign' aria-hidden='true'></span></a> </div> </div> <div class='row form-group'> <div class='col-md-3' style='text-align: right;'> by this syntax: </div> <div class='col-md-8 form-inline'> <select class='selectpicker' id='form_choice_"+t+"'> <option selected='true'>one of these characters:</option> <option>of the following form:</option> </select> <input type='text' class='form-control' size=60 id='input_chars"+t+"' placeholder='examples: 0-9 or a-zA-Z'> <span><span id='input_form"+t+"'>example:left + right</span></span>. </div> <div class='col-md-1'> <a href='#' onclick='javascript:showHelp("+t+",\"form\");'> <span class='glyphicon glyphicon-question-sign' aria-hidden='true'></span></a> </div> </div> <div class='row form-group'> <div class='col-md-3' style='text-align: right;'> We labeled it as </div> <div class='col-md-8'> <input type='text' class='form-control' id='input_tag"+t+"' placeholder='number, sum/difference, polynomial, factor in a product, ...'> </div> <div class='col-md-1'> <a href='#' onclick='javascript:showHelp("+t+",\"tag\");'> <span class='glyphicon glyphicon-question-sign' aria-hidden='true'></span></a> </div> </div> <div class='row form-group'> <div class='col-md-3' style='text-align: right;'> and interpret it as </div> <div class='col-md-8 form-inline'> <select class='selectpicker' id='input_interpret_"+t+"'> <option selected='true'>a symbol application</option> <option>a binding expression</option> <option>a string</option> <option>an integer</option> <option>a floating point number</option> <option>a variable</option> <option>(no change to interpretation)</option> </select> <span id='span_for_bound_vars_"+t+"' class='hidden'> , binding the variables at indices <input type='text' class='form-control' size=10 id='bound_vars_"+t+"' placeholder='1 3'></span> <span id='span_for_symbol_for_"+t+"'> of the symbol <input type='text' class='form-control' size=30 id='symbol_for_"+t+"' placeholder='example: binary addition'></span>. </div> <div class='col-md-1'> <a href='#' onclick='javascript:showHelp("+t+",\"interp\");'> <span class='glyphicon glyphicon-question-sign' aria-hidden='true'></span></a> </div> </div> </div>","panel panel-info is-a-definition")},O=function(t){var e,n,o,i,a,l,s,r,u,c,d,f,h,m,b,g,v;return $("#input_name"+t).val(null!=(o=null!=(i=p.elements[t])?i.name:void 0)?o:""),$("#input_chars"+t).val(null!=(c=null!=(d=p.elements[t])?d.chars:void 0)?c:""),$("#input_form"+t).mathquill("editable"),null!=(null!=(f=p.elements[t])?f.form:void 0)&&$("#input_form"+t).mathquill("latex",p.elements[t].form),$("#input_tag"+t).val(null!=(h=null!=(m=p.elements[t])?m.tag:void 0)?h:""),$("#symbol_for_"+t).val(null!=(b=null!=(g=p.elements[t])?g.sym:void 0)?b:""),$("#bound_vars_"+t).val(null!=(v=null!=(a=p.elements[t])?a.bound:void 0)?v:""),n=null!=(l=null!=(s=p.elements[t])?s.choice:void 0)?l:"one of these characters:",$("#form_choice_"+t+" option").each(function(t,e){return e=$(e),e.prop("selected",e.text()===n)}),n=null!=(r=null!=(u=p.elements[t])?u.interp:void 0)?r:"an expression tree",$("#input_interpret_"+t+" option").each(function(t,e){return e=$(e),e.prop("selected",e.text()===n)}),(e=function(){return n=$("#form_choice_"+t+" option:selected"),"one of these characters:"===n.text()?($("#input_chars"+t).removeClass("hidden"),$("#input_form"+t).get(0).parentNode.style.display="none"):($("#input_chars"+t).addClass("hidden"),$("#input_form"+t).get(0).parentNode.style.display="inline"),n=$("#input_interpret_"+t+" option:selected"),"a binding expression"===n.text()?$("#span_for_bound_vars_"+t).removeClass("hidden"):$("#span_for_bound_vars_"+t).addClass("hidden"),"a symbol application"===n.text()?$("#span_for_symbol_for_"+t).removeClass("hidden"):$("#span_for_symbol_for_"+t).addClass("hidden")})(),$("#form_choice_"+t).change(e),$("#input_interpret_"+t).change(e),$("#test_above_button_"+t).click(function(e){return p.insert(t,{type:"test"})}),$("#test_below_button_"+t).click(function(e){return p.insert(t+1,{type:"test"})}),$("#form_above_button_"+t).click(function(e){return p.insert(t,{type:"definition"})}),$("#form_below_button_"+t).click(function(e){return p.insert(t+1,{type:"definition"})}),$("#delete_form_button_"+t).click(function(e){return p.remove(t)}),$("#duplicate_form_button_"+t).click(function(e){return p.insert(t,JSON.parse(JSON.stringify(p.elements[t])))}),$("#move_up_button_"+t).click(function(e){return p.swap(t-1)}),$("#move_down_button_"+t).click(function(e){return p.swap(t)})},d=function(t){var e,n,o;for(n=0,e=o=0;t>=0?t>o:o>t;e=t>=0?++o:--o)"definition"===p.elements[e].type&&n++;return u("<div class='panel-heading'> <div class='row'> <div class='col-md-6'><h5>Test of the language defined above (containing "+n+" forms)</h5></div> <div class='col-md-6' style='text-align: right;'> Move <button type='button' id='move_up_button_"+t+"' data-toggle='tooltip' title='Move this test up' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-up' aria-hidden='true'></span></button> <button type='button' id='move_down_button_"+t+"' data-toggle='tooltip' title='Move this test down' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-down' aria-hidden='true'></span></button> Test <button type='button' id='test_above_button_"+t+"' data-toggle='tooltip' title='Add test above' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-up' aria-hidden='true'></span></button> <button type='button' id='test_below_button_"+t+"' data-toggle='tooltip' title='Add test below' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-down' aria-hidden='true'></span></button> Form <button type='button' id='form_above_button_"+t+"' data-toggle='tooltip' title='Add form above' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-up' aria-hidden='true'></span></button> <button type='button' id='form_below_button_"+t+"' data-toggle='tooltip' title='Add form below' class='btn btn-md btn-default'><span class='glyphicon glyphicon-arrow-down' aria-hidden='true'></span></button> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <button type='button' id='duplicate_test_button_"+t+"' data-toggle='tooltip' title='Duplicate this test' class='btn btn-md btn-default'><span class='glyphicon glyphicon-plus' aria-hidden='true'></span></button> <button type='button' id='delete_test_button_"+t+"' data-toggle='tooltip' title='Delete this test' class='btn btn-md btn-default'><span class='glyphicon glyphicon-remove' aria-hidden='true'></span></button> </div> </div></div> <div class='panel-body'> <div>Enter an expression in your language, then press enter to see the parsed result</div> <div><p><span id='test_input_"+t+"'>temp</span></p></div> <div><pre id='test_output_"+t+"'></pre></div> </div>","panel panel-success is-a-test-zone")},k=function(t){var e,n,o,i;return $("#test_input_"+t).mathquill("editable"),$("#test_input_"+t).mathquill("latex",null!=(e=null!=(n=p.elements[t])?n.input:void 0)?e:"PutTestHere"),$("#test_output_"+t).text(null!=(o=null!=(i=p.elements[t])?i.output:void 0)?o:""),$("#test_output_"+t).text("(Result will be shown here.)"),$("#test_above_button_"+t).click(function(e){return p.insert(t,{type:"test"})}),$("#test_below_button_"+t).click(function(e){return p.insert(t+1,{type:"test"})}),$("#form_above_button_"+t).click(function(e){return p.insert(t,{type:"definition"})}),$("#form_below_button_"+t).click(function(e){return p.insert(t+1,{type:"definition"})}),$("#delete_test_button_"+t).click(function(e){return p.remove(t)}),$("#duplicate_test_button_"+t).click(function(e){return p.insert(t,JSON.parse(JSON.stringify(p.elements[t])))}),$("#move_up_button_"+t).click(function(e){return p.swap(t-1)}),$("#move_down_button_"+t).click(function(e){return p.swap(t)})},T=function(){for(var t,n,o,i,a,l;m()>0;)S(0);for(l=p.elements,n=i=0,a=l.length;a>i;n=++i)t=l[n],"definition"===t.type?(e(c(n)),O(n)):(e(d(n)),k(n),q(n));return $(".selectpicker").selectpicker(),o=null,$("input").keyup(function(t){return null!=o&&clearTimeout(o),o=setTimeout(N,500)}),$(".mathquill-editable").keyup(function(t){return null!=o&&clearTimeout(o),o=setTimeout(N,500)}),$("select").change(function(t){return null!=o&&clearTimeout(o),o=setTimeout(N,500)})},a=function(t){return function(e){var n,o,i,a;for(o=a=0;t>=0?t>a:a>t;o=t>=0?++a:--a)if("definition"===p.elements[o].type&&null!=(i=p.elements[o].name)&&(n=e.slice(0,i.length).join(""),i===n))return i}},q=function(t){var e;return e=$("#test_input_"+t).get(0),$("#test_output_"+t).text(b(t,window.mathQuillToMeaning(e,a(t))))},N=function(){var t,e,n,i,l,s,r;for(r=[],e=l=0,s=m();s>=0?s>l:l>s;e=s>=0?++l:--l)$(o(e)).hasClass("is-a-definition")?(null==(n=p.elements)[e]&&(n[e]={}),p.elements[e].type="definition",p.elements[e].name=$("#input_name"+e).val(),p.elements[e].chars=$("#input_chars"+e).val(),p.elements[e].form=$("#input_form"+e).mathquill("latex"),t=$("#input_form"+e).get(0),p.elements[e].form_array=window.mathQuillToMeaning(t,a(e)),p.elements[e].tag=$("#input_tag"+e).val(),p.elements[e].sym=$("#symbol_for_"+e).val(),p.elements[e].bound=$("#bound_vars_"+e).val(),p.elements[e].interp=$("#input_interpret_"+e+" option:selected").text(),r.push(p.elements[e].choice=$("#form_choice_"+e+" option:selected").text())):(null==(i=p.elements)[e]&&(i[e]={}),p.elements[e].type="test",p.elements[e].input=$("#test_input_"+e).mathquill("latex"),p.elements[e].output=$("#test_output_"+e).val(),r.push(q(e)));return r},window.showHelp=function(t,e){return alert(function(){switch(e){case"name":return"This must be a valid identifier, meaning that it must start with a letter or underscore, and then can contain any sequence of letters, numbers, or underscores.\n    Examples: \n    sum, product, hex_digit, integerBelow10";case"form":return'1. If you choose "one of these characters," then this blank must be filled with a list of individual characters, and the form being defined matches exactly one of them.  Thus, for instance, you could define a single digit this way: \n    0123456789 \nNote that this only defines a single digit, not an entire sequence of digits.  For that, create a higher-level syntactic form, using the option 2., below. \nHyphens indicate ranges of digits, so the above set of characters could also be defined this way: \n    0-9 \nTo include an actual hyphen as a valid character, put it first or last in the list. \n \n2. If you choose "of the following form," then this blank must exhibit the form in question.  Identifiers that have been previously declared as names for forms are interpreted as such; whitespace is interpreted as optional and of any length; everything else is interpreted as exact text. Examples: \n    Natural numbers: \n        Base form:       digit \n        Inductive form:  digit natural \n    Sums: \n        Base form:       term \n        Inductive form:  term + sum \n    Grouping symbols: \n        One form:        ( expression )';case"tag":return"Any human-readable phrase can go here, but it should be brief, because it will be used to populate bubble tags when expressions of this form appear inside the bubble.";case"interp":return'If the piece of syntax you\'re defining should have special meaning (e.g., as a number for us in computations, or as a variable for use in quantifiers) then mark it here as having such an interpretation.  If you\'re defining something hierarchical (e.g., a binary sum) then you should mark it as "an expression tree."  If you\'re defining a quantifier (or any operator that binds variables, such as a summation, product, integral, lambda, etc.) then you should mark it as a binding expression.  In that case, you say which of the tokens in the expression are variables that should be bound.  For instance, if you define an expression \n    Sum sub ( variable = term ) sup ( term ) term \nthen you should say item 3 (the fourth counting from zero, the "variable" token) is a variable to be bound.'}}())},$(function(){var t;return $("#loadButton").click(function(t){var e,n;return e=y(),0===e.length?alert("You have not saved any language definitions yet."):(n=prompt("Type the name of the language definition to load, chosen from the following list:\n \n"+e.join("\n"),e[0]),null!=n?s(n):void 0)}),t=null,$("#saveButton").click(function(e){var n;return n=prompt("Type the name under which to save this language definition.",t),null==n||I.call(y(),n)>=0&&!confirm("Save over language definition of that same name?")?void 0:_(t=n)}),$("#eraseButton").click(function(t){var e,n;return e=y(),0===e.length?alert("You have not saved any language definitions yet."):(n=prompt("Type the name of the language definition to erase, chosen from the following list:\n \n"+e.join("\n"),e[0]),null==n||I.call(e,n)<0||!confirm("Are you SURE you want to ERASE "+n+"?")?void 0:g(n))}),T()}),b=function(t,e){var n,o,i,a,l,s,r,u,c,d,f,h,m,b,g,_,y,w,$,x,O,k,T,A,M,S,N,q,z,E,J,j,D,C,Z,B;n=new Grammar;try{for(b={},u=A=0;t>=0?t>A:A>t;u=t>=0?++A:--A)if("definition"===p.elements[u].type){if(a=p.elements[u],m=null!=(q=null!=(z=a.name)?z.trim():void 0)?q:"",!/^[a-zA-Z_][a-zA-Z_0-9]*$/.test(m))throw"This name was not an identifier: "+m;if(k=null!=(E=a.sym)?E.trim():void 0,T=null!=(J=a.tag)?J.trim():void 0,f=null!=(j=a.interp)?j.trim():void 0,O=/^[a-zA-Z_][a-zA-Z_0-9]*\.[a-zA-Z_][a-zA-Z_0-9]*$/,_=null!=b[m]?b[m]:b[m]={},null!=_.tag&&_.tag!==T)throw"Inconsistent tag names for "+m+": "+_.tag+" and "+T;if(_.tag=T,null!=_.interp&&_.interp!==f)throw"Inconsistent tag names for "+m+": "+_.interp+" and "+f;if(_.interp=f,O.test(k))b[m].sym=OM.symbol.apply(OM,k.split("."));else{for(g=/[a-zA-Z_]/.test(k[0])?"":"_",u=M=0,D=k.length;D>=0?D>M:M>D;u=D>=0?++M:--M)g+=/[a-zA-Z_]/.test(k[u])?k[u]:""+k.charCodeAt(u);b[m].sym=OM.symbol(g,"Lurch")}if("a binding expression"===f){for(d=null!=(C=a.bound)&&null!=(Z=C.trim())?Z.split(/\s+/):void 0,S=0,N=d.length;N>S;S++)if(c=d[S],!/^[0-9]+$/.test(c))throw"This variable index is not a natural number: "+v+".  The list of bound variables should be just natural numbers separated by whitespace.";b[m].bound=d}o=(null!=(B=a.chars)?B:"").trim(),x=function(){var t,e,i,l,r;if("one of these characters:"===a.choice)return RegExp("["+RegExp.escape2(o)+"]");for(i=null!=(l=a.form_array)?l:[],r=[],t=0,e=i.length;e>t;t++)s=i[t],r.push(n.rules.hasOwnProperty(s)?s:RegExp(RegExp.escape(s)));return r}(),n.addRule(m,x),null==n.START&&(n.START=m),1===x.length&&n.START===x[0]&&(n.START=m)}if(y=OM.sym("Lurch","ParsedFrom"),h=null,n.setOption("expressionBuilder",function(t){var e,n,o,i,a,l,s,r,c,d;return m=t[0],i=b[m],h=i.tag,d=function(t){var e;return t instanceof OM?(null!=(e=t.getAttribute(y))?e:t).value:t},o=function(t){var e;return function(){var n,o,i;for(i=[],n=0,o=t.length;o>n;n++)e=t[n],i.push(""+d(e));return i}().join("")},s=function(){switch(i.interp){case"a symbol application":return e=function(){var e,n,o;for(o=[],e=0,n=t.length;n>e;e++)a=t[e],a instanceof OM&&o.push(a);return o}(),e.length>0?OM.application.apply(OM,[i.sym].concat(R.call(e))):i.sym;case"a binding expression":return n=function(){var e,n,o,a;for(o=i.bound,a=[],e=0,n=o.length;n>e;e++)u=o[e],a.push(t[u]);return a}(),l=function(){var e,n,o;for(o=[],u=e=0,n=t.length;n>=0?n>e:e>n;u=n>=0?++e:--e)I.call(i.bound,u)<0&&o.push(u);return o}(),l=function(){var e,n,o;for(o=[],e=0,n=l.length;n>e;e++)u=l[e],t[u]instanceof OM&&o.push(t[u]);return o}(),OM.application.apply(OM,[i.sym].concat(R.call(n),R.call(l)));case"a string":return OM.string(o(t.slice(1)));case"an integer":return r=o(t.slice(1)),r=r.replace(/\u2212/g,"-"),c=OM.integer(parseInt(r)),c.setAttribute(OM.sym("Lurch","ParsedFrom"),OM.str(r)),c;case"a floating point number":return r=o(t.slice(1)),r=r.replace(/\u2212/g,"-"),c=OM["float"](parseFloat(r)),c.setAttribute(OM.sym("Lurch","ParsedFrom"),OM.str(r)),c;case"a variable":return OM.variable(o(t.slice(1)));case"(no change to interpretation)":return t[1]}}()}),n.setOption("comparator",function(t,e){return null!=t&&"function"==typeof t.equals?t.equals(e):void 0}),!n.START)throw"No grammar rules have been defined.";return $=n.parse(e),$=function(){var t,e,n,o,a,l;for(l=[],t=0,e=$.length;e>t;t++)if(w=$[t],w instanceof OM){for(r=function(t){return t.getAttribute(y)},a=w.descendantsSatisfying(r),o=0,n=a.length;n>o;o++)i=a[o],i.removeAttribute(y);l.push(JSON.stringify(JSON.parse(w.encode()),null,4))}else l.push("Not an OMNode: "+JSON.stringify(w));return l}(),"Input: "+e+" \nResult: "+$.join("\nResult: ")+" \nType: "+h}catch(F){return l=F,console.log(l.stack),"Language definition error:  "+l}},RegExp.escape=function(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")},RegExp.escape2=function(t){return t.replace(/[\/\\^$*+?.()|[\]{}]/g,"\\$&")}}).call(this);
//# sourceMappingURL=cp-test.solo.min.js.map